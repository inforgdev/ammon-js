"use strict";function e(e,t,a){return{description:a,title:t,emoji:e}}var t={commit:{rules:{"type-empty":[2,"never"],"type-case":[2,"always","lowerCase"],"type-enum":[2,"always",["feat","bug","style","refactor","perf"]],"scope-case":[2,"always","lowerCase"],"scope-enum":[2,"always",["main","docs","test","build","pipe","example"]],"subject-empty":[2,"never"],"subject-case":[2,"never",["sentence-case","start-case","pascal-case","upper-case"]],"subject-full-stop":[2,"never","."],"header-max-length":[2,"never",100],"body-leading-blank":[1,"always"],"body-max-line-length":[2,"always",100],"footer-leading-blank":[1,"always"],"footer-max-line-length":[2,"always",100]},prompt:{questions:{type:{description:"type",enum:{feat:e("✨","feat","add a new feature."),bug:e("🐛","bug","fix code not hitting a feature."),style:e("💅","style","fix code format (eg. white-space, missing semi-colons, etc.)."),refactor:e("♻️","refactor","fix code to improve legibility."),perf:e("⚡","oerf","fix a code to improve performance.")}},scope:{description:"scope",enum:{main:e("⭐","main","the code itself."),docs:e("📚","docs","the code explanation. (eg. README, LICENSE, etc.)"),test:e("✅","tests","the code requirement validation scripts."),build:e("🛠","build","build system or external dependencies config/script. (eg: npm, vitejs, webpack, etc.)"),pipe:e("⚙️","pipe","ci/cd config. (eg: travis, circle, browserstack, saucelabs, gulp, grunt)"),example:e("🖼️","example","the code used to illustrate the docs.")}},subject:{description:"subject"},body:{description:"body"},isBreaking:{description:"any breaking changes?"}},messages:{skip:":skip",max:"upper %d chars",min:"%d chars at least",emptyWarning:"can not be empty",upperLimitWarning:"over limit",lowerLimitWarning:"below limit"}}}};module.exports=t;
